<?php/*The string passed consists of a few variables. The brackets note parts that correspond to certian prices. m[something] would display "something" when a monthly fee is present (or when flagged to always show).m[%%mp] will show the monthly price when presentm[%%mp]o[%os] will show the monthly price when it is present and the one-time setup when it is presentText outside of brackets will always be shownMultiple instances of a single bracket type will cause unpredictable behavior. Nested brackets are not supported and will cause unpredictable behavior.%%mp Monthly price%%op One Time price%%yp Yearly price%%sp Semi-Yearly price%%qp Quarterly price%%ms Monthly setup%%os One Time setup%%ys Yearly setup%%ss Semi-Yearly setup%%qs Quarterly setupDefault string is:m[(%%mp/%%ms Monthly)]q[(%%qp/%%qs Quarterly)]s[(%%sp/%%ss Semi-Anually)]y[(%%yp/%%ys Yearly)]o[ + %%os Setup]*/function priceString($data,$string='m[(%%mp/%%ms Monthly)]q[(%%qp/%%qs Quarterly)]s[(%%sp/%%ss Semi-Anually)]y[(%%yp/%%ys Yearly)]o[ + %%os Setup]',$formet="en-US"){	// Set the locale (money_formet is not widely supported so this is done custom)	$locales = array(		"en-US"=>array('$',2,'.',',',false), //symbol, Decimal places, decimal seperator, thousands seperator, is symbol a postfix		"en-CA"=>array('$',2,'.',',',false),		"fr-CA"=>array('$',2,',','.',true),		"en-UK"=>array('£',2,'.',',',false)	);	if(!isset($locales[$format]))	{		$format="en-US";		trigger_error("Warning: priceString format paramater not found, defaulting to en-US",E_USER_WARNING);	}	//replace the variables	$string = str_replace( //Monthly price		'%%mp',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['monthly']['price'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //Monthly setup		'%%ms',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['monthly']['setup'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //quarterly price		'%%qp',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['quarterly']['price'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //quarterly setup		'%%qs',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['quarterly']['setup'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //semi-annual price		'%%sp',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['semi']['price'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //semi-annual setup		'%%ss',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['semi']['setup'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //Annual price		'%%ap',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['annual']['price'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //Annual setup		'%%as',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['annual']['setup'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //setup price		'%%op',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['one_time']['price'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);	$string = str_replace( //setup setup		'%%os',		($locales[$format][4]==true ? $locales[$format][0] : '') . number_format($data['one_time']['setup'], $locales[$format][1], $locales[$format][2], $locales[$format][3]) . ($locales[$format][4]==false ? $locales[$format][0] : ''),		$string	);			$bracketTypes = array('monthly'=>'m','quarterly'=>'q','semi'=>'s','annual'=>'y','one_time'=>'o');		//Take out the conditional brackets that do not belong 	foreach($bracketTypes as $key=>$bracket)	{		$openPos=strpos($string,$bracket.'['); // Position of the opening bracket		if($openPos !== false)		{			$rem=substr($string,$openPos); // Removes everything before the opening			$closePosRel=strpos($rem,']'); // Finds the closing position relative to the sub string			$closePos=$closePosRel+$openPos+1; // The closing position of the bracket in the full string.			$content=substr($string,$openPos,$closePos);			if($data[$key]["price"] == 0 && $data[$key]["setup"] == 0)			{				$string=str_replace($content,'',$string);			}		}	}		return $string;}